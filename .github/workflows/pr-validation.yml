name: PR Validation

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

# Limit permissions for PR workflows from forks
permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Only checkout the PR head, not merge commit
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: TypeScript compilation check
        run: npx tsc --noEmit
        
      - name: Build project
        run: npm run build
        
      - name: Run tests (if available)
        run: npm test --if-present
        
      - name: Security audit
        run: npm audit --audit-level=moderate
        
      - name: Check for secrets in code
        run: |
          # Simple check for potential secrets
          if grep -r -i "api[_-]key\|secret\|password\|token" src/ --exclude-dir=node_modules --exclude="*.md" --exclude="*.json"; then
            echo "Potential secrets found in code!"
            exit 1
          fi
          
      - name: Validate package.json
        run: |
          # Ensure package.json has required fields
          node -e "
            const pkg = require('./package.json');
            if (!pkg.repository || !pkg.repository.url) {
              console.error('Missing repository URL in package.json');
              process.exit(1);
            }
            if (!pkg.license) {
              console.error('Missing license in package.json');
              process.exit(1);
            }
            console.log('Package.json validation passed');
          "
          
  # Separate job to check that PR doesn't modify sensitive files
  security-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to check changed files
          
      - name: Check for sensitive file changes
        run: |
          # Get list of changed files in this PR
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          
          # List of sensitive files that require special review
          SENSITIVE_FILES=(
            ".github/workflows/publish-to-npm.yml"
            "package.json"
            ".npmrc"
            ".github/dependabot.yml"
          )
          
          # Check if any sensitive files were modified
          for file in "${SENSITIVE_FILES[@]}"; do
            if echo "$CHANGED_FILES" | grep -q "^$file$"; then
              echo "⚠️  Sensitive file modified: $file"
              echo "This PR modifies sensitive files and requires careful review."
            fi
          done